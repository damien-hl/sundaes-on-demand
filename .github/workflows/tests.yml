name: Tests CI

on: [push, pull_request]

jobs:
  server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v2

      - name: Test server using Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-server-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-server-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-server-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run server tests
        run: yarn test
  
  client:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    steps:
      - uses: actions/checkout@v2

      - name: Test client using Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-client-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-client-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-client-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run client tests
        run: yarn test